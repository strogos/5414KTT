/*
 * Elevator.h
 *
 *  Created on: Apr 22, 2015
 *      Author: bengteh
 */

#ifndef ELEVATOR_H_
#define ELEVATOR_H_

#include "tools/signalslot/W_Slot.h"
#include "tools/signalslot/W_Signal.h"

#include "ace/Task.h"
//#include <ace/Reactor.h>
//#include <ace/Event_Handler.h>

namespace Elevator
{
	/*FWD DECLARATIONS*/
	class Control;
	enum tag_lamp_type : int;
	typedef tag_lamp_type button_type_t;


	struct Control_Signals
	{
		/*thread safe signals*/
		W::Signal<button_type_t> signal_button_press;  //signal for user input
		W::Signal<int> signal_floor_prox;              //signal for floor proximity sensors
		W::Signal<int> signal_stop_prox;               //signal for stop proximity sensors
		W::Signal<int> signal_obstruct_prox;           //signal for obstruction proximity sensor

	};

	/*ELEVATOR [ace]TASK */
	class Elevator : public ACE_Task<ACE_MT_SYNCH>,
	                 public W::Slot
	{
		public:
			Elevator(Control * ctrl_handle);
			~Elevator();



			int start();

		private:
			Control_Signals *ctrl_signals_=nullptr;


	};
}
#endif /* ELEVATOR_H_ */
