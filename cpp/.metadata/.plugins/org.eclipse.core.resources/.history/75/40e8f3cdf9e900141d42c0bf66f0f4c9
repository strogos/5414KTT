/*
 * Timer.cpp
 *
 *  Created on: Apr 23, 2015
 *      Author: bengteh
 */



#include "Timer.h"
#include "ace/Log_Msg.h"

Timer::Timer(int time_out)
{
	timer_id_=reactor.schedule_timer(this,  				//timer handler
									(const void *)time_out,
									ACE_Time_Value(0)); 	//delay before going off
}


int Timer::handle_timeout (const ACE_Time_Value &tv,const void *arg)
{
	long current_count = long (arg);
	ACE_DEBUG ((LM_DEBUG, "Timer #%d timed out at %d!\n",
				 timer_id_, tv.sec()));
	done_=true;
	//Keep yourself registered with the Reactor.
	return 0;
}

int Timer::open(void*)
{
	ACE_DEBUG((LM_DEBUG,
						"(%t) Active Timer Object opened \n"));
	//activate object with a thread in it
	//this->activate(THR_NEW_LWP | THR_SUSPENDED,1); //using a kernel thread
	activate();
	return 0;
}

int Timer::close(u_long)
{
	ACE_DEBUG((LM_DEBUG, "(%t) Active Timer Object is being closed down \n"));
	return 0;
}

int Timer::svc(void)
{

	while (!done_)
	{

	}

	return 0;
}
int Timer::get_id(){return timer_id_;}

void Timer::cancel_timer(int timer_id)
{
	reactor.cancel_timer(timer_id);
	done_=true;
}
