/*
 * Elevator.h
 *
 *  Created on: Apr 22, 2015
 *      Author: bengteh
 */

#ifndef ELEVATOR_H_
#define ELEVATOR_H_


#include "Control.h"
#include "Driver.h"

#include "tools/signalslot/W_Slot.h"
#include "tools/signalslot/W_Signal.h"

#include <ace/Log_Msg.h>
#include <ace/Task.h>
//#include <ace/Reactor.h>
//#include <ace/Event_Handler.h>

namespace Elevator
{
	class Control; //fwd decl. Control class so that the Elevator constr. is usable

	struct Control_Signals
	{
		/*thread safe signals*/
		W::Signal<bint> signal_button_press;  //signal for user input
		W::Signal<int> signal_floor_prox;              //signal for floor proximity sensors
		W::Signal<int> signal_stop_prox;               //signal for stop proximity sensors
		W::Signal<int> signal_obstruct_prox;           //signal for obstruction proximity sensor

	};
	class Elevator : public ACE_Task<ACE_MT_SYNCH>, public W::Slot
	{
		public:
	//		Elevator();
			Elevator(Driver * ctrl_handle);
			~Elevator();



			int start();

		private:
			Control_Signals *ctrl_signals_=nullptr;


	};
}
#endif /* ELEVATOR_H_ */
